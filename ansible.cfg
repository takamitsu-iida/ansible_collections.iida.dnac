# ansibleの動作設定ファイル
# ======================
#
# ansible.cfg
# https://github.com/ansible/ansible/blob/devel/examples/ansible.cfg
# https://docs.ansible.com/ansible/latest/reference_appendices/config.html
#

[inventory]

# enable inventory plugins, default: 'host_list', 'script', 'yaml', 'ini'
enable_plugins = ini

[defaults]

# Pythonの探索方法の指定
# ansible 2.8以降ではWARNINGが表示されるため、それを抑止するために設定する
# https://docs.ansible.com/ansible/2.8/porting_guides/porting_guide_2.8.html#python-interpreter-discovery
#   auto_legacy (Ansible 2.8のデフォルト値)
#   auto (Ansible 2.12以降のデフォルト値)
#   auto_legacy_silent (WARNINGメッセージなし)
#   auto_silent(WARNINGメッセージなし)
interpreter_python = auto_legacy_silent

# インベントリファイルそのもの、もしくは、インベントリファイルを格納しているディレクトリ名を指定します
# デフォルトはカレントディレクトリの hosts
# これを切り替えることで対象装置を変更します
inventory = ./inventories/development
# inventory = ./inventories/production
# inventory = ./inventories/mac
# inventory = ./inventories/dynamic

# ansible-vaultで使うパスワードはgitに含めない場所に保存しておきます
# vault_password_file = ~/.vault_password

# このパスを設定するとプレイブックの実行ログをファイルに出力します
# ログファイルは大きくなりがちなのでlogrotateするか定期的に削除すること
# log_path = ./log/ansible.log

# シェルのデフォルトは/bin/sh
# ログインシェルがbashのアカウントではPATHの設定が反映されず、
# /usr/local/binの下にインストールされたアプリが実行できない
# その場合はここで/bin/bash -lに変更するか、フルパスを指定して実行する
# executable = /bin/sh
# executable = /bin/bash -l

# ロールの格納ディレクトリを指定します
roles_path = ./roles

# モジュールの場所を指定します
library = ./plugins/modules:~/.ansible/plugins/modules

# module_utilsの位置を指定します
module_utils = ./plugins/module_utils:~/.ansible/plugins/module_utils

# プラグインの場所
# コロンで複数指定
# lookup_plugins     = ./plugins/lookup
# inventory_plugins  = ./plugins/inventory
# vars_plugins       = ./plugins/vars

# actionプラグインはモジュール実行前に同じ名前のファイルが実行される
# モジュールを実行するときのパラメータの書き換えや追加はactionプラグインでやるとよい
action_plugins = ./plugins/action:~/.ansible/plugins/action

# filterプラグイン
filter_plugins = ./plugins/filter:~/.ansible/plugins/filter

# 2.7以降でしか使えないplugin
# 2.5ではこの設定は未サポートなので、その場合はansible本体にファイルをコピーすること
terminal_plugins = ./plugins/terminal:~/.ansible/plugins/terminal
cliconf_plugins = ./plugins/cliconf:~/.ansible/plugins/cliconf

# SSH接続時のリモートホストの鍵をローカルのknown_hostsと照合してチェックするか。
# デフォルトはTrue
# Vagrantやクラウド上の仮想サーバなど頻繁にVMを作り変える環境ではFalseに。
host_key_checking = False

# retryファイルの作成を抑止するならFalse
# デフォルトはTrue
retry_files_enabled = False

# 画面表示はcallbackの仕組みで実装されていて表示形式は選択可能
# debugにするとstdoutの文字列を"\n"ではなく改行として表示する（デフォルトはskippy）
stdout_callback = debug
display_ok_hosts = True
display_skipped_hosts = False

# コールバックプラグインはホワイトリスト形式になっているので、ここに列挙したものが使われる
callback_whitelist = profile_roles, profile_tasks

# 同一タスクを複数ホストに適用する場合の同時実行数（デフォルトは5）
forks = 10

# 非同期指定時のポーリング間隔（デフォルトは15）
# 接続方式にnetwork_cliを使う限り非同期で動かすことはない
# poll_interval = 15

# SSHの接続方式
transport = smart

# SSHのパイプライン化（デフォルトはFalse）
# TrueにするとSSHが高速になるが、/etc/sudoersにある 'requiretty' をdisableにする必要がある
# ネットワーク機器だけの場合はTrueにしておけばいい
# 踏み台を踏むときは、この設定は関係なく、タスクごとにSSHが張られるはず。
# pipelining = False
pipelining = True

# network_cliには関係ないので設定しない
# SSH timeout
# This is the default timeout for connection plugins to use
# timeout = 10

# 対象ホストのFactsを収集するか
# smart - gather by default, but don't regather if already gathered
# implicit - gather by default, turn off with gather_facts: False
# explicit - do not gather by default, must say gather_facts: True
gathering = implicit

# 対象ホストのFactsの内容
gather_subset = all

# 対象ホストからFactsを収集する際のタイムアウト
gather_timeout = 30

# cowsは未インストール
nocows = True

[paramiko_connection]

# known_hostsにない場合に自動で追加
host_key_auto_add = True


[persistent_connection]

# Configures the persistent connection timeout value in seconds.  This value is
# how long the persistent connection will remain idle before it is destroyed.
# If the connection doesn't receive a request before the timeout value
# expires, the connection is shutdown. The default value is 30 seconds.
# 環境変数
# ANSIBLE_PERSISTENT_CONNECT_TIMEOUT
# connect_timeout = 30

# The command timeout value defines the amount of time to wait for a command
# or RPC call before timing out. The value for the command timeout must
# be less than the value of the persistent connection idle timeout (connect_timeout)
# The default value is 10 second.
# 環境変数
# ANSIBLE_PERSISTENT_COMMAND_TIMEOUT
# command_timeout = 10

# コンフィグの流し込みをするとき
command_timeout = 60

# show techやファイルコピー操作をするとき
# connect_timeout = 300
