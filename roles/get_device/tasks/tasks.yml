---

# preflight setting

- name: set_fact current datetime
  set_fact:
    # 2020-01-13@11-16-03
    _date: "{{ lookup('pipe', 'date +%Y-%m-%d@%H-%M-%S') }}"

- name: set_fact log filename
  set_fact:
    _filename: "{{ inventory_hostname + '_' + role_name|basename + '_' + _date }}"

# ログの保存場所を変更するならここで指定
- name: set_fact log directory name
  set_fact:
    _logdir: "{{ LOG_DIR }}"  # + LOG_SUBDIR }}"

- name: create log directory if not exists
  delegate_to: localhost
  file:
    path: "{{ LOG_DIR }}"
    state: directory
    recurse: true
  run_once: true

#
# 装置に乗り込んでコマンドを実行する。
# 失敗した場合に備えてblock rescueを使う。
#
-
  block:
    - name: get a list of devices
      iida.dnac.get_devices:
        # - ip: 10.10.20.81
        # - id: ''
        # - serial: ''
      register: result

    - name: set_fact device_list
      set_fact:
        _device_list: "{{ result.device_list }}"
        _get_failed: false
      when:
        - "'device_list' in result"

  rescue:
    - name: save failed log
      delegate_to: localhost
      copy:
        content: "{{ result | to_nice_json(indent=2) }}"
        dest: "{{ _logdir + '/' + '_FAILED_' + _filename + ext }}"
      vars:
        - ext: '.txt'

    - name: set_fact failed
      set_fact:
        _get_failed: true


# 以下set_factできた場合のみ実行するためにblockの最後にこれを付与する
#
# when:
#   - device_list is defined
#
- block:

    # CSVファイルを作成する
    # Windowsのエクセルを使うならエンコーディングをCP932に変えること
    - name: SAVE AS CSV show system info
      delegate_to: localhost
      template:
        # srcはtemplatesフォルダが探索パスに含まれているのでファイル名だけでよい
        # destはファイル名だけだとrole_pathからの相対パスになるので注意
        src: get_devices.csv.j2
        dest: "{{ _logdir + '/' + _filename + '_sysinfo.csv' }}"
        output_encoding: "{{ OUTPUT_ENCODING }}"
        newline_sequence: "{{ NEWLINE_SEQUENCE }}"
      ignore_errors: true


  when:
    - device_list is defined
